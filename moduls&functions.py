'''
    Синтаксис Python __________________________________________________________
'''



# ___________________________Вывод данных в консоль ___________________________

print() # вывод в консоль
print(a, b, c) # Выводит все переменные в строку
print(a, ' - ', b, ' - ', c) # Выводит переменные в строку через дефиз
print(f"{a} - {b} - {c} ") # Вывод переменных через F-строки
print("{} - {} - {}".format(a,b,c)) 
# Вывод переменных через функцию format. ({} внутри находятся переменные a,b,c)

print(type()) # Выводит тип данных в консоль

n = None # пустое значение, если не знаем какой тип данных будет иметь переменная
print(n)

n = 'fddf' # строчный тип данных ('...')
n1 = 'fdf\' dfs'  # (\') - добавление (') в строку
n2 = ' dfs"dsfd" dfdf' # добавление ковычек 


# _________________________________Ввод данных _______________________________

print('Введите первое число') # Выводим в терминал сообщение "приглашение к вводу"
a = input() # Введенные данные присваиваем переменной а
print(a) # Выводим в терминал введенное значение а

b = input('Введите второе число: ')
# выводим "приглашение" (введенное значение выводится в той же строке правее )

print(a, ' + ', b, ' = ', a + b)
# Складывает строки между собой и выводит в терминал


# ____________________________Приведение типов:_____________________________

c = 5.89 # тип данных float
c = int(c) # Приводит с к целочисленному типу данных int
c = str(c) # Приводит с к строчному типу данных str
print(c + '89') # Добавляет к c '89'
d = bool(c) # Приводит к логическому типу данных bool

print('Введите первое число') # Выводим в терминал сообщение "приглашение к вводу"
a = int(input()) # Введенные данные присваиваем переменной а и приводим к типу int
b = int(input('Введите второе число: '))
# выводим "приглашение" (введенное значение выводится в той же строке правее )
# и приводим введенные данные к типу int

print(a, ' + ', b, ' = ', a + b) # Складываются значение переменных


#_______________________ Сокращенное присваивание:____________________________

iter = 2
iter += 3 # iter = iter + 3
iter -= 4 # iter = iter - 4
iter *= 5 # iter = iter * 5
iter /= 5 # iter = iter / 5
iter //= 5 # iter = iter // 5 # Целочисленное деление
iter %= 5 # iter = iter % 5 # Нахождение остатка от деления
iter **= 5 # iter = iter ** 5 # Возведение в степень


# __________________________Логические операции:____________________________

a = 1 > 4 
print(a) # вывевдится False

a = 1 < 4 and 5 > 2 # and объединяет условия(true - оба условия верны)
print (a) # True

a = 1 == 2 # оператор равенства
print  (a) # false

a = 1 != 2 # Проверка на НЕ равенство
print (a) # True

a = 'qwe'
b = 'qwe'
print(a == b) # Сравнение строк. Выводится True

a = 1 < 3 < 5 < 10 # Сравнение нескольких чисел между собой
print(a) # True


# ____________Управляющие конструкции if, else, elif(if-else)________________

username = input('Введите имя: ')
if username == 'Маша':
    print('Ура, это же Маша!')
elif username == 'Марина':
    print('Я так ждала Вас, Марина!')
elif username == 'Ильнар':
    print('Ильнар - топ!')
else:
    print('Привет, ', username)


# _____________________________Цикл While____________________________________

n = 423
summa = 0
while n > 0:
    x = n % 10
    summa = summa + x
    n = n // 10
print(summa)


# ______________________________Цикл While Else_______________________________

i = 0
while i < 5:
    if i == 3:
        break # Останавливает цикл когда i доходит до задоного значения(break лучше не использовать)
    i = i + 1
else:
    print('Пожалуй') # Когда (i) цикл доходит до 5 выводится сообщение
    print('хватит )')
print(i)

# Вместо Break лучше использовать метода Флажка:


n = int(input())
flag = True
i = 2
while flag: 
    if n % i == 0: # если остаток от деления числа n на i равен 0
        flag = False
        print(i)
    elif i > n // 2: 
                 # делитель числа не может превышать введенное число, деленное на 2
        print(n)
        flag = False
    i += 1
 
 # ________________________Цикл for, Функция range():________________________
 
for i in r:
    print(i)

for i in 'qwerty': # цикл for работает со строками(нумерация как у массивов начиная с 0)
    print(i)
 
a = 'qwerty'

print(a[0]) # Выводит символ с индексом "0"
print(a[2]) # Выводит символ с индексом "2"

for i in a: # цикл for проходит по всей строке(как по массиву) 
    print(i) # и выводит построчно все символы







 
 
 # _____________________________ Строки:______________________________________

text = 'СъЕШЬ еще этих МяГкИх французских булок'
print(len(text)) # Показывает размер строки(или любой другой коллекции данных)
print('eще' in text) # проверяет есть ли слово'еще' в строке text
print(text.lower())  # Переводит все буквы в стрке text в нижний регистр
print(text.upper()) # Переводит все букувы в строке text в ВЕРХНИЙ РЕГИСТР
print(text.replace('еще', 'ЕЩЕ')) # Меняет сочетание символов в строке text c 'еще' на 'ЕЩЕ'


# ___________________________________Срезы:__________________________________

text = 'съешь еще этих мягких французских булок'
print(text[0]) # выводит букву с индексом 0
print(text[1]) # выводит букву с индексом 1
print(text[len(text)-1]) # узнает размер строки и выводит последнюю букву
print(text[-1]) # выводит последнюю букву строки
print(text[-5]) # выводит 5-ю букву с конца строки
print(text[:]) # Выводит все символы в строке
print(text[:2]) # Выводт все символы с 0 по 2 индекс(первые два)
print(text[len(text)-2:]) # Выводит 2 последних символа 
print(text[2:9]) # Выводит символы со 2 по 9 элемент не включая его
print(text[6:-18]) # Обратная индексация: Начиная с 6 элемента до -18(считая с конца)
print(text[0:len(text):6]) # Выводтит с начала строки до конца с шагом 6(каждый 6-й элемент)
print(text[::6]) # Тоже самое, что и строка выше


text = 'съешь еще этих мягких французских булок'
text = text[2:9] + text[-5] + text[:2] # Объединяет разные срезы
print(text)
 
 
 
 
 
'''
    Методы ____________________________________________________________

'''




'''
    Функции _______________________________________________________________
'''

#______________________________round_________________________________________
round() # Функция округления чисел 

# round(1.34343, 2) 
# # 1-й аргумент: число
# 2-й аргумент: число знаков после запятой который мы оставляем

a = 5.899545
b = 6.556464565456
# print(a*b) # перемножение переменных
print(round(a*b, 3)) # Перемножаем a и b, и оставляем 3 знака после запятой









#_____________________________.format________________________________________
format() #
print("{} - {} - {}".format(a,b,c))# Вывод переменных через функцию .format
# ({} внутри находятся переменные a,b,c)

for i in range():
    input('{} текст : '.format(i+ 1)).split() # 


#_______________________________range_________________________________________
range 
# ф-я котора создает некую заданную последовательность(Просим ввести число n раз)
# внутри range(...) можно использовать 3 значения (старт, конец, шаг)

r = range(5)
r = range(2, 5) # Первый аргумент - число с которого начинаем 2-й арг. - число которым заканчиваем не включая его
r = range(0, -5) # Ничего не выведется 
r = range(1, 10, 2) # 1-й Ар.- Начало 2-й Ар.- конец 3-й Ар.- шаг
r = range(100, 0, -20) # начало 100, конец 0, шаг -20

line = ""
for i in range(5): # Переменная range генирирует посл-ть из 5 чисел, цикл for будет выполняться 5 раз
    line = "" # Создаем пустую переменную line
    for j in range(5): # в строке создаем 5 пустых переменных
        line += "*" # к строке прибавляем пять звездочек
    print(line)

